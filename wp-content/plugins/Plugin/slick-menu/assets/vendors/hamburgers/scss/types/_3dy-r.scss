@if index($hamburger-types, 3dy-r) {
  /*
   * 3DY Reverse
   */
   .sm-hamburger--3dy-r.sm-position-#{$hamburger-position} {
    .sm-hamburger-box {
      @include perspective($hamburger-layer-width * 2);
    }

    .sm-hamburger-inner {
      @include transition(transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1),
                  background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1));

      &:before,
      &:after {
        @include transition(transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1));
      }
    }

    &.is-active {
      .sm-hamburger-inner {
        background-color: transparent;
        @include transform(rotateX(180deg));

        &:before {
          @include transform(translate3d(0, $hamburger-layer-height + $hamburger-layer-spacing, 0) rotate(45deg));
        }

        &:after {
          @include transform(translate3d(0, ($hamburger-layer-height + $hamburger-layer-spacing) * -1, 0) rotate(-45deg));
        }
      }
    }
    
    &:not(.is-active) {
	    .sm-hamburger-inner {
	      @include transition(transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1),
	                  background-color $hamburger-hover-transition-duration $hamburger-hover-transition-timing-function);
	
	      &:before,
	      &:after {
	        @include transition(transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), background-color $hamburger-hover-transition-duration $hamburger-hover-transition-timing-function);
	      }
	    }	    
	}   
        
  }
}
