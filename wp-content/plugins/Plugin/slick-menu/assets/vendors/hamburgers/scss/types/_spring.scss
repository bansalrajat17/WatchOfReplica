@if index($hamburger-types, spring) {
  /*
   * Spring
   */
   .sm-hamburger--spring.sm-position-#{$hamburger-position} {
    .sm-hamburger-inner {
      top: $hamburger-layer-height / 2;
      @include transition(background-color $hamburger-hover-transition-duration $hamburger-hover-transition-timing-function);

      &:before {
        top: $hamburger-layer-height + $hamburger-layer-spacing;
        @include transition(top 0.12s 0.3s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
                    transform 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color $hamburger-hover-transition-duration $hamburger-hover-transition-timing-function);
      }

      &:after {
        top: ($hamburger-layer-height * 2) + ($hamburger-layer-spacing * 2);
        @include transition(top 0.3s 0.3s cubic-bezier(0.33333, 0.66667, 0.66667, 1),
                    transform 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color $hamburger-hover-transition-duration $hamburger-hover-transition-timing-function);
      }
    }

    &.is-active {
      .sm-hamburger-inner {
        @include transition-delay(0.32s);
        background-color: transparent;

        &:before {
          top: 0;
          @include transition(top 0.12s 0.18s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
                      transform 0.15s 0.32s cubic-bezier(0.215, 0.61, 0.355, 1));
          @include transform(translate3d(0, $hamburger-layer-spacing + $hamburger-layer-height, 0) rotate(45deg));
        }

        &:after {
          top: 0;
          @include transition(top 0.3s cubic-bezier(0.33333, 0, 0.66667, 0.33333),
                      transform 0.15s 0.32s cubic-bezier(0.215, 0.61, 0.355, 1));
          @include transform(translate3d(0, $hamburger-layer-spacing + $hamburger-layer-height, 0) rotate(-45deg));
        }
      }
    }
  }
}
